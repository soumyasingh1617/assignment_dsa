14-> Find the median of two sorted arrays using binary search

#include<iostream>
#include<vector>
#include<climits>
using namespace std;
double median(vector<int> a,vector<int> b){
    int n1=a.size();
    int n2=b.size();
    if(n1>n2){
       return median(b,a);
    }
    int left=0;
    int right=n1;
    int total=n1+n2;
    int leftSide=(total+1)/2;
    while(left<=right){
        int mid1=(left+right)/2;
        int mid2=leftSide-mid1;
        int l1,r1,l2,r2;
        if(mid1==0){
            l1=INT_MIN;
        }
        else{
            l1=a[mid1-1];
        }
        if(mid1==n1){
            r1=INT_MAX;
        }
        else{
            r1=a[mid1];
        }
        if(mid2==0){
            l2=INT_MIN;
        }
        else{
            l2=b[mid2-1];
        }
        if(mid2==n2){
            r2=INT_MAX;
        }
        else{
            r2=b[mid2];
        }
        if(l1<=r2 && l2<=r1){
            if(total%2==1){
                return max(l1,l2);
            }
            else{
                return (max(l1,l2)+min(r1,r2))/2.0;
            }
        }
        else if(l1>r2){
            right=mid1-1;
        }
        else{
            left=mid1+1;
        }
    }
    return 0;
}
int main(){
    vector<int>a={1,3};
    vector<int> b={2};
    cout<<"Median is: "<<median(a,b);
}
